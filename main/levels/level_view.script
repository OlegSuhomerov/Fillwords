local json_module = require('main.levels.json_module')
local input_module = require('main.levels.inputmodule')
local window_module = require('main.levels.window_module')
local hash_module = require('main.levels.hash_module')
local board_module = require("main.levels.board_module")

msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

function init(self)
	msg.post(".", hash_module.acquire_input_focus)
	msg.post("#", hash_module.start_level)
end

local function build_board()
	
	window_module.build_board_config()
	
	local data = board_module.board.data
	local button_cord = board_module.button_cord
	
	local pos = vmath.vector3()
	for i in ipairs(data) do
		pos.y = window_module.bottom_margin + window_module.block_size * (#data - i)
		button_cord[i] = {}
		for j in ipairs(data[i]) do
			pos.x = window_module.left_margin + window_module.block_size * (j-1)
			data[i][j].id = factory.create('#blockfactory', pos, null, {}, window_module.block_scale)
			label.set_text(data[i][j].id, data[i][j].char)
			button_cord[i][j] = {pos_x = pos.x + window_module.block_size / 2, pos_y = pos.y + window_module.block_size / 2}
		end
	end
end

local function on_fail(i,j)
	local data = board_module.board.data
	for i in ipairs(data) do
		for j in ipairs(data[i]) do
			if not data[i][j].guessed then
				msg.post(data[i][j].id, hash_module.play_animation, {id = hash_module.red})
			end
		end
	end
end

local function on_success(word_num)
	local data = board_module.board.data
	for i in ipairs(data) do
		for j in ipairs(data[i]) do
			if data[i][j].word_num == word_num then
				msg.post(data[i][j].id, hash_module.play_animation, {id = hash_module.green})
			end
		end
	end
	local level_successed = true
	for i in ipairs(data) do
		for j in ipairs(data[i]) do
			if not data[i][j].guessed then
				level_successed = false
				break
			end
		end
	end
	
	if level_successed then
		msg.post("#gui", hash_module.level_completed)
	end
end

local function on_move(i,j, attempt_word)
	local data = board_module.board.data
	msg.post(data[i][j].id, hash_module.play_animation, {id = hash_module.blue})

	if attempt_word then
		msg.post("#gui", hash_module.is_entering, {input = attempt_word})
	end
end

function on_input(self, action_id, action)
	input_module.on_input(action,action_id, on_success, on_fail, on_move)
end

function on_message(self, message_id, message, sender)
	if message_id == hash_module.start_level then
		msg.post("#gui", hash_module.current_level)
		board_module.board = json_module.get_level_data()
		build_board()
	end
end