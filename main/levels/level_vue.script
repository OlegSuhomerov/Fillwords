require('main.levels.json_module')
require('main.levels.inputmodule')
require('main.levels.window_module')
local hashmodule = require('main.levels.hashmodule')
msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

function init(self)
	self.board = {}
	self.button_cord = {}
	msg.post(".", "acquire_input_focus")
	msg.post("#", "start_level")
end

local function build_board(self)
	local pos = vmath.vector3()
	for i in ipairs(self.board.data) do
		pos.y = self.bottom_margin + self.block_size * (i-1)
		self.button_cord[i] = {}
		for j in ipairs(self.board.data[i]) do
			pos.x = self.left_margin + self.block_size * (j-1)
			local id = factory.create('#blockfactory', pos, null, {}, self.block_scale)
			self.board.data[i][j].id = id
			label.set_text(self.board.data[i][j].id, self.board.data[rows - (i-1)][j].char)
			self.button_cord[i][j] = {pos_x = pos.x + self.block_size / 2, pos_y = pos.y + self.block_size / 2}

		end
	end
end

function on_input(self, action_id, action)
	if action_id == hashmodule.touch and action.value == 1 then
		I.input(self, action_id, action)
	elseif action.released and action.value == 0 then
		I.check(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start_level") then
		self.current_level = 3
		self.board = M.get_level_data(self)
		W.window_change(self)
		build_board(self)
	end
end