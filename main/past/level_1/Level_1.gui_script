require "main.words"
local word1, word2, word3 = M.words_print_level1()

local edge = 50
input_length = 0
passing_level = 0
number_tiles = 9

function init(self)
	msg.post(".", "acquire_input_focus")
	
	local level_1 = {
		[1] = {
			[1] = {order = 1, data = word1[1], word_length = 3},
			[2] = {order = 2, data = word1[2], word_length = 3},
			[3] = {order = 3, data = word1[3], word_length = 3},
		},
		[2] = {
			[1] = {order = 1, data = word2[1], word_length = 3},
			[2] = {order = 2, data = word2[2], word_length = 3},
			[3] = {order = 3, data = word2[3], word_length = 3},
		},
		[3] = {
			[1] = {order = 1, data = word3[1], word_length = 3},
			[2] = {order = 2, data = word3[2], word_length = 3},
			[3] = {order = 3, data = word3[3], word_length = 3},
		},
	}

	for i in ipairs(level_1) do
		for j in ipairs(level_1[i]) do
			local node = gui.get_node('label_' .. i .. '_' .. j)
			gui.set_text(node, level_1[i][j].data)
			level_1[i][j].started = false
			level_1[i][j].input_order = 0
			level_1[i][j].finished = false
		end
	end

	level_1_cord = {
		[1] = {
			[1] = {position_x = 120, position_y = 360},
			[2] = {position_x = 240, position_y = 360},
			[3] = {position_x = 360, position_y = 360},
		},
		[2] = {
			[1] = {position_x = 120, position_y = 240},
			[2] = {position_x = 240, position_y = 240},
			[3] = {position_x = 360, position_y = 240},
		},
		[3] = {
			[1] = {position_x = 120, position_y = 120},
			[2] = {position_x = 240, position_y = 120},
			[3] = {position_x = 360, position_y = 120},
		},
	}
end

function on_input(self, action_id, action)
	local level = level_1
	local level_cord = level_1_cord
	local click_x = action.x
	local click_y = action.y
	if action_id == hash("touch") and action.value == 1 then
		M.typing_word(self, level_cord, edge, level, click_x, click_y)
	elseif action_id == hash("touch") and action.released and action.value == 0 then
		M.word_check(self, level, level_cord)
		passing_level = 0
		input_length = 0
	end
end