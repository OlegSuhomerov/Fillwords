require('main.levels.json_module')
msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

local DEFAULT_BLOCK_SIZE = 128

local function build_board(self)
	local pos = vmath.vector3()
	local data = self.board.data
	for y in ipairs(data) do
		pos.y = self.bottom_margin + self.block_size * (y-1)
		for x in ipairs(data[y]) do
			pos.x = self.left_margin + self.block_size * (x-1)

			local id = factory.create('#blockfactory', pos, null, {}, self.block_scale)
			label.set_text(id, data[#data - (y-1)][x].char)

			data[y][x].id = id
		end
	end

	msg.post("#", "test")
end

function init(self)
	self.current_level = 1
	self.board = M.get_level_data(self)
	
	local screen_width, screen_heigth = 360, 740 --window.get_size()
	local rows, cols = #self.board.data, #self.board.data[1]
	
	self.block_scale = screen_width / cols / DEFAULT_BLOCK_SIZE
	self.block_size = DEFAULT_BLOCK_SIZE * self.block_scale
	self.left_margin = (screen_width - cols * self.block_size) / 2
	self.bottom_margin = (screen_heigth - rows * self.block_size) / 2
	
	build_board(self)
	msg.post(".", "acquire_input_focus")
end



-- function on_input(self, action_id, action)
-- 	if action_id == hash("touch") and action.value == 1 then
-- 		pprint(h)
-- 	end
-- end
-- 
-- function on_message(self, message_id, message, sender)
-- 	if message_id == hash("test") then
-- 		pprint(self.board.data[1][1].id)
-- 	end
-- end